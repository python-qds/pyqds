# See https://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files
# And this great example : https://github.com/Kinto/kinto/blob/master/setup.cfg
[metadata]
name = qdscreen
description = Quasi-determinism screening for fast Bayesian Network Structure Learning (from T.Rahier's PhD thesis, 2018)
description-file = README.md
license = BSD 3-Clause
long_description = file: docs/long_description.md
long_description_content_type=text/markdown
keywords = functional dependency correlation categorical feature selection bayesian network structure learning bnsl determinism quasi screening qds qds-bnsl
author = Sylvain MARIE <sylvain.marie@se.com>, Thibaud RAHIER <t.rahier@criteo.com>
url = https://github.com/python-qds/qdscreen
# download_url = https://github.com/python-qds/qdscreen/tarball/master >> do it in the setup.py to get the right version
classifiers =
    # See https://pypi.python.org/pypi?%3Aaction=list_classifiers
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: BSD License
    Topic :: Software Development :: Libraries :: Python Modules
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
# one day these will be able to come from requirement files, see https://github.com/pypa/setuptools/issues/1951. But will it be better ?
setup_requires =
    setuptools_scm
install_requires =
    pandas
    pyitlib
tests_require =
    pytest
    pytest-runner
    pytest-html
# test_suite = tests --> no need apparently
#
zip_safe = False
# explicitly setting zip_safe=False to avoid downloading `ply` see https://github.com/smarie/python-getversion/pull/5
# and makes mypy happy see https://mypy.readthedocs.io/en/latest/installed_packages.html
packages = find:
# see [options.packages.find] below
# IMPORTANT: DO NOT set the `include_package_data` flag !! It triggers inclusion of all git-versioned files
# see https://github.com/pypa/setuptools_scm/issues/190#issuecomment-351181286
# include_package_data = True
[options.packages.find]
exclude =
    docs
    *tests*

[options.package_data]
* = py.typed, *.pyi


# Optional dependencies that can be installed with e.g.  $ pip install -e .[dev,test]
# [options.extras_require]

# -------------- Packaging -----------
# [options.entry_points]
# console_scripts =
#     foocmd = foo.__main__:main

# [egg_info] >> already covered by setuptools_scm

[bdist_wheel]
# Code is written to work on both Python 2 and Python 3.
universal=1

# ------------- Others -------------
# In order to be able to execute 'python setup.py test'
# from https://docs.pytest.org/en/latest/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner
[aliases]
test = pytest

# pytest default configuration
[tool:pytest]
testpaths = qdscreen/
addopts =
    --verbose
    --doctest-modules
#    --ignore-glob='**/_*.py'

# we need the 'always' for python 2 tests to work see https://github.com/pytest-dev/pytest/issues/2917
filterwarnings =
    always
;    ignore::UserWarning

# Coverage config: already done in ci_tools/run_tests.sh
# [coverage:run]
# branch = True
# omit = *tests*
# source = qdscreen
# command_line = -m pytest --junitxml="reports/pytest_reports/pytest.xml" --html="reports/pytest_reports/pytest.html" -v qdscreen/tests/
#
# [coverage:report]
# fail_under = 70
# show_missing = True
# exclude_lines =
#     # this line for all the python 2 not covered lines
#     except ImportError:
#     # we have to repeat this when exclude_lines is set
#     pragma: no cover
#
# [coverage:html]
# directory = site/reports/coverage_reports
#
# [coverage:xml]
# output = site/reports/coverage_reports/coverage.xml
