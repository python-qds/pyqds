{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"qdscreen \u00b6 Remove redundancy in your categorical variables and increase your models performance. qdscreen provides a python implementation of the Quasi-determinism screening algorithm (also known as qds-BNSL ) from T.Rahier's PhD thesis, 2018. Installing \u00b6 > pip install qdscreen Usage \u00b6 TODO Main features / benefits \u00b6 TODO See Also \u00b6 Bayesian Network libraries in python: pyGOBN (MIT license) pgmpy (MIT license) pomegranate (MIT license) bayespy (MIT license) Other libs for probabilistic inference: pyjags (GPLv2 license) edward (Apache License, Version 2.0) Others \u00b6 Do you like this library ? You might also like smarie's other python libraries Want to contribute ? \u00b6 Details on the github page: https://github.com/python-qds/qdscreen","title":"Home"},{"location":"#qdscreen","text":"Remove redundancy in your categorical variables and increase your models performance. qdscreen provides a python implementation of the Quasi-determinism screening algorithm (also known as qds-BNSL ) from T.Rahier's PhD thesis, 2018.","title":"qdscreen"},{"location":"#installing","text":"> pip install qdscreen","title":"Installing"},{"location":"#usage","text":"TODO","title":"Usage"},{"location":"#main-features-benefits","text":"TODO","title":"Main features / benefits"},{"location":"#see-also","text":"Bayesian Network libraries in python: pyGOBN (MIT license) pgmpy (MIT license) pomegranate (MIT license) bayespy (MIT license) Other libs for probabilistic inference: pyjags (GPLv2 license) edward (Apache License, Version 2.0)","title":"See Also"},{"location":"#others","text":"Do you like this library ? You might also like smarie's other python libraries","title":"Others"},{"location":"#want-to-contribute","text":"Details on the github page: https://github.com/python-qds/qdscreen","title":"Want to contribute ?"},{"location":"api_reference/","text":"API reference \u00b6 In general, using help(symbol) is the recommended way to get the latest documentation. In addition, this page provides an overview of the various elements in this package. todo \u00b6 TODO Parameters: todo : TODO","title":"API reference"},{"location":"api_reference/#api-reference","text":"In general, using help(symbol) is the recommended way to get the latest documentation. In addition, this page provides an overview of the various elements in this package.","title":"API reference"},{"location":"api_reference/#todo","text":"TODO Parameters: todo : TODO","title":"todo"},{"location":"changelog/","text":"Changelog \u00b6 0.5.0 - First public version \u00b6 Initial release with (TODO)","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#050-first-public-version","text":"Initial release with (TODO)","title":"0.5.0 - First public version"},{"location":"long_description/","text":"qdscreen \u00b6 Remove redundancy in your categorical variables and increase your models performance. qdscreen is a python implementation of the Quasi-determinism screening algorithm from T.Rahier's PhD thesis, 2018. The documentation for users is available here: https://python-qds.github.io/qdscreen/ A readme for developers is available here: https://github.com/python-qds/qdscreen","title":"qdscreen"},{"location":"long_description/#qdscreen","text":"Remove redundancy in your categorical variables and increase your models performance. qdscreen is a python implementation of the Quasi-determinism screening algorithm from T.Rahier's PhD thesis, 2018. The documentation for users is available here: https://python-qds.github.io/qdscreen/ A readme for developers is available here: https://github.com/python-qds/qdscreen","title":"qdscreen"}]}